Challenges

const item = thingsArray.map((element, key) =>{
    return `<p key={key}>{element}</p>`;
})

{item}






challenge 2:
function addElement(){
    thingsArray.push(`Things ${thingsArray.length + 1}`);
    return console.log(thingsArray);
}

<button onClick={addElement}>





challenge 3:
function greeting(name){
    const date = new Date();
    const hours = date.getHours();
    let timeOfDay;

    if(hours >= 4 && hours < 12){
        timeOfDay = "morning";
    }
    else if(hours >= 12 && hours < 17){
        timeOfDay = "afternoon";
    }
    else if(hours >= 17 && hours < 20){
        timeOfDay = "evening";
    }
    else{
        timeOfDay = "night";
    }

    return `Good ${timeOfDay}, ${name}`;
}

const {memeImage, setMemeImage} = useState(memeImage: "");







const [counter, setCounter] = useState(counter = 0);
function countUp(){
    setCounter(counter + 1);
}
function countDown(){
    setCounter(counter - 1);
}

function countUp(){
    setCounter((oldValue)=>{
        return oldValue + 1;
    });
}

function countUp(){
    setCounter(prevCount => prevCount + 1;
    });
}

onClick={countDown}
onClick={countUp}





const [isGoingOut, setIsGoingOut] = useState(true);
setIsGoingOut(prevState => !prevState)

{setIsGoingOut ? "Yes" : "No"}




adding to array
const [thingsArray, setThingsArray] = useState(thingsArray = ["Thing 1", "Thing 2"])
setThingsArray((prevState)=>{
    return [...prevState, `Thing ${prevState.length+1}`])
})






const [thingsArray, setThingsArray] = useState(thingsArray = ["Thing 1", Thing 2"])

setThingsArray((prevState) => {
    return [...prevState, `Thing ${prevState.length+1}`];
})

const thingsElements = thingsArray.map((element,key) =>{
    return `<p>{element}</p>`
})




change icon name:
let starIcon = contact.isFavorite ? "star-filled.png" : "star-empty.png";
{starIcon}



update OBJECTS - need brackets
setContact((prevState)=>{
    return {
        ...prevState, 
        isFavorite: !prevState.isFavorite
    }
})





/* Challenge of course */
import React from "react";

export function Star({isFillable, handleClick}){

    return(
        <div>
            <img src={isFillable ? "star-filled.png" : "star-empty.png"} alt=""
            onClick={handleClick}/>
        </div>
    )
}

export default Star;

import Star
function toggleFavorite(){
    return ...
}

<Star isFilled = {contact.isFavorite} handleClick={toggleFavorite}/>









Component App
import Box

const [boxesArray, setBoxesArray] = useState(boxes)


const display = boxesArray.map((element, key) =>{
    return <Box key={key} on={element.on}/>
})

return(
    {display}
)




Component Box(props)

const styles = {
    backgroundColor: props.on ? "#222222" : "none"
}

return(
    <div style={styles} className="box"><div>
)

App css
.box{
    display: inline-block
    width: 100px;
    height: 100px;
    border: 1px solid black;
    background-color: transparent;
}